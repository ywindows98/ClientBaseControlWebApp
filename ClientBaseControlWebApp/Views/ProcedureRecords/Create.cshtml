@using ClientBaseControlWebApp.Data.Enums;
@using ClientBaseControlWebApp.Data.Services;
@model ProcedureRecordViewModel


@{
	ViewData["Title"] = "Add new procedure";
}


<div class="row">
	<div class="col-md-8 offset-2">
		<p>
			<h1>@ClientBaseControlWebApp.Resources.Resource.AddProcedureRecord</h1>
		</p>
		<div class="row">
			<div class="col-md-10 offset-1">
				<form asp-action="Create">
					<div asp-validation-summary="ModelOnly" class="text-danger">
					</div>
					<div class="row mb-2">
						<div class="form-group col-5">
							<label asp-for="ProcedureTypeId" class="control-label">@ClientBaseControlWebApp.Resources.Resource.ProcedureTypeLabel</label>
							<select asp-for="ProcedureTypeId" class="form-control" id="ProcedureTypeId" value="@ClientBaseControlWebApp.Resources.Resource.ChooseSelection">
								
								@foreach (ProcedureType procedureType in Model.AvailableProcedureTypes)
								{
									<option value="@procedureType.Id">@procedureType.Name</option>
								}
							</select>
							<span asp-validation-for="ProcedureTypeId" class="text-danger"></span>
						</div>
						<div class="form-group col-7">
							<label asp-for="ClientId" class="control-label">@ClientBaseControlWebApp.Resources.Resource.ChooseClientLabel</label>
							<select asp-for="ClientId" class="form-control" id="ClientId" value="@ClientBaseControlWebApp.Resources.Resource.ChooseSelection">

								@foreach (Client client in Model.AvailableClients)
								{
									<option value="@client.Id">
										<b>@client.Name @client.Surname</b> 
										@if (client.Birthday != null)
										{
											@client.Birthday.Value.ToShortDateString()
										}
										</option>
								}
							</select>
							<span asp-validation-for="ClientId" class="text-danger"></span>
						</div>
					</div>
					<div class="row mb-2">
						<div class="form-group col-3">
							<label asp-for="Date" class="control-label">@ClientBaseControlWebApp.Resources.Resource.DateLabel</label>
							<input type="date" asp-for="Date" class="form-control" id="Date" />
							<span asp-validation-for="Date" class="text-danger"></span>
						</div>
					</div>
					<div class="row mb-2">
						<div class="form-group col-12">
							<label for="materialSelect" class="control-label">@ClientBaseControlWebApp.Resources.Resource.ChooseMaterial</label>
							<div class="col-12 d-flex">
								<div class="col-6">
									<select class="form-control" id="materialSelect">
										@foreach (Material material in Model.AvailableMaterials)
										{
											<option value="@material.Id">
											@material.Name
											</option>
										}
									</select>
								</div>
								<div class="col-6">
									<button type="button" id="addMaterialButton" class="btn btn-outline-primary"><i class="bi bi-journal-plus"></i> @ClientBaseControlWebApp.Resources.Resource.AddMaterialToProcedure</button>
								</div>
							</div>
						</div>
					</div>
					<div class="row mb-2">
						<div class="form-group col-12">
							<label>@ClientBaseControlWebApp.Resources.Resource.SelectedMaterials</label>
							<ul id="selectedMaterials" class="d-flex"></ul>
						</div>
					</div>

					@Html.HiddenFor(m => m.SelectedMaterialIds)

					@*<div class="row mb-2">
						<div class="form-group col-12">
							<label for="selectedMaterials" class="control-label">@ClientBaseControlWebApp.Resources.Resource.MaterialsNav</label><br />
							<select class="w-100" name="selectedMaterials" id="selectedMaterials" multiple>
								@foreach (Material material in ViewBag.Materials)
								{
									<option value="@material.Id">
										@if (material.MaterialType == 0)
										{
											materialIcon = "bi bi-droplet-half";
										}
										else if (material.MaterialType == 1)
										{
											materialIcon = "bi bi-pen-fill";
										}
										else
										{
											materialIcon = "bi bi-shuffle";
										}
										<i class="@materialIcon"></i>
										@material.Name
									</option>
								}
								
							</select>
							@Html.ListBox("selectedMaterials", (SelectList)ViewBag.Materials, new { @class = "form-control", multiple = "multiple" })
							@Html.ValidationMessage("selectedMaterials", new { @class = "text-danger" })
						</div>
					</div>*@
					<div class="row mb-2">
						<div class="form-group">
							<label asp-for="Comment" class="control-label">@ClientBaseControlWebApp.Resources.Resource.NoteLabel</label>
							<textarea asp-for="Comment" class="form-control" id="Comment" rows="2"></textarea>
							<span asp-validation-for="Comment" class="text-danger"></span>
						</div>
					</div>
					<div class="form-group mt-2">
						<button class="btn btn-outline-secondary" asp-controller="ProcedureRecords" asp-action="Index"><i class="bi bi-card-list"></i> @ClientBaseControlWebApp.Resources.Resource.ShowAllButton</button>
						<button type="reset" class="btn btn-outline-warning"><i class="bi bi-arrow-clockwise"></i> @ClientBaseControlWebApp.Resources.Resource.ResetButton</button>
						<button type="submit" class="btn btn-outline-success float-end"><i class="bi bi-check-circle"></i> @ClientBaseControlWebApp.Resources.Resource.SaveButton</button>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>
<script>
</script>

@section Scripts {
    <script>
		   var selectedMaterials = [];

           $('#addMaterialButton').click(function () {
                var selectedMaterialId = $('#materialSelect').val();
                var selectedMaterialName = $('#materialSelect option:selected').text();

                if (selectedMaterialId && !selectedMaterials.includes(selectedMaterialId)) {
                    selectedMaterials.push(selectedMaterialId);
                    $('input[name="SelectedMaterialIds"]').val(selectedMaterials.join(','));
                    $('#selectedMaterials').append('<li>' + selectedMaterialName + '</li>');
                } else {
                    alert("Please select a valid material or material already added.");
                }
            });

    </script>
}